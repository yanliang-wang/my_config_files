# REF: http://deanbodenham.com/learn/tmux-conf-file.html

#-------------------------------------------------------#
#-------------------------------------------------------#
# Plugins settings ⬇️ ⬇️ ⬇️
#-------------------------------------------------------#


# list of plugins
# see https://github.com/tmux-plugins/tpm
set-option -g default-shell /usr/bin/zsh
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible' # 一些大家都接受的公认配置
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-sidebar'
#set -g @plugin 'tmux-plugins/tmux-yank'
# 这个主题兼容的不是很好
#set -g @plugin 'dracula/tmux'

# dracula  https://draculatheme.com/tmux
#set -g @dracula-plugins "cpu-usage ram-usage git time"
#set -g @dracula-show-powerline true
#set -g @dracula-show-time true
#set -g @dracula-cpu-usage true
#set -g @dracula-ram-usage true
#set -g @dracula-refresh-rate 5

#-------------------------------------------------------#
#-------------------------------------------------------#
# General settings ⬇️ ⬇️ ⬇️
#-------------------------------------------------------#

# set prefix
unbind C-b
set -g prefix M-a # 注意alt-a这个快捷键不要和其他冲突，不然会被优先捕捉

#set mouse off/on - if off, forces you to use keyboard with prefix-[
set -g mouse on
 
# start with window 1 (instead of 0)
set -g base-index 1
 
# start with pane 1
set -g pane-base-index 1
 
# allow utf8 support
#set -q -g status-utf8 on     # expect UTF-8 (tmux < 2.2)
#setw -q -g utf8 on

# Or for tmux >= 2.6
set -sg escape-time 10

# 绑定 `-r 快速重新加载配置文件 display 是加载后展示的信息, \; 可以绑定执行多条命令
bind r source-file ~/.tmux.conf \; display "~/.tmux.conf reloaded OK!"

#-------------------------------------------------------#
#-------------------------------------------------------#
# Styles ⬇️ ⬇️ ⬇️
#-------------------------------------------------------#

# --------------Plan A--------------
#256 colours
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# set inactive/active window(pane) styles 
set -g window-style 'fg=colour247,bg=colour236'
set -g window-active-style 'fg=colour250,bg=black'
set -g status-interval 1
set -g window-status-format '#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})#F'
set -g window-status-current-format '#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})#F'

set -g pane-border-style fg='#78909C'
set -g pane-active-border-style fg='#FFD600'

# pane-border-style
# set-option -w pane-border-status off

# --------------Plan B--------------
 
# # --------- 配置颜色 -------------
# set -g default-terminal "screen-256color"
# 
# # 配置窗口样式
# # 配置前景色与背景色
# setw -g window-status-fg cyan
# setw -g window-status-bg default
# # setw -g window-status-attr dim
# 
# # 配置当前窗口的颜色
# setw -g window-status-current-fg white
# setw -g window-status-current-bg red
# setw -g window-status-current-attr bright
# 
# # 配置面板颜色
# set -g pane-border-fg green
# set -g pane-border-bg default
# 
# # 配置当前面板颜色
# set -g pane-active-border-fg yellow
# set -g pane-active-border-bg default
# 
# set -g message-fg white
# set -g message-bg black
# set -g message-attr bright

# 设置底部状态栏的背景色和前景色
set -g status-fg white
set -g status-bg default
set -g status-left-length 40
set -g status-left "#[fg=green]S:#S  #[fg=yellow]W:#I  #[fg=cyan]P:#P"

set -g status-right "#H    #[fg=cyan]%Y-%m-%d %R"


set -g status-interval 60


set -g status-justify centre

# 状态更新监控
# setw -g monitor-activity on
# set -g visual-activity on

#-------------------------------------------------------#
#-------------------------------------------------------#
# PANE NAVIGATION/MANAGEMENT ⬇️ ⬇️ ⬇️
#-------------------------------------------------------#

# splitting panes
# use vim-like keys for splits and windows

# bind-key -n <C-1> split-window -h 
# bind-key -n <C-1> split-window -v 

bind | split-window -h 
bind - split-window -v 
bind-key -n 'C-\' split-window -h 

# 重新映射移动键
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind-key -n 'M-h' select-pane -L
bind-key -n 'M-j' select-pane -D
bind-key -n 'M-k' select-pane -U
bind-key -n 'M-l' select-pane -R

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

bind -n 'M-Left' resize-pane -L 4
bind -n 'M-Down' resize-pane -D 4
bind -n 'M-Up' resize-pane -U 4
bind -n 'M-Right' resize-pane -R 4

# 设置vim mode
# use vi mode
setw -g mode-keys vi
set -g status-keys vi

# Setup 'v' to begin selection as in Vim
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"


bind l send-keys -R C-l \; clear-history
bind x kill-pane
bind-key -n 'C-w' kill-pane

#-------------------------------------------------------#
#-------------------------------------------------------#
# Plugins settings ⬇️ ⬇️ ⬇️
#-------------------------------------------------------#

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run  '~/.tmux/plugins/tpm/tpm'

# just for test
# bind-key -n 'C-u' display "test"
